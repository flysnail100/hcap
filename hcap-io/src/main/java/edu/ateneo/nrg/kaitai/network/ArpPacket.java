package edu.ateneo.nrg.kaitai.network;

import io.kaitai.struct.KaitaiStruct;
import io.kaitai.struct.KaitaiStream;

import java.io.IOException;


/**
 * @author zenon
 * @see <a href="https://tools.ietf.org/html/rfc826">Source</a>
 * 
 * This file was generated by the kaitai struct compiler.
 * Although it may be edited to suit your needs, please
 * refer to @see <a href="http://kaitai.io/</a> for more
 * details on the kaitai struct library and how it can be 
 * used to parse binary files.
 */
public class ArpPacket extends KaitaiStruct {
    public static ArpPacket fromFile(String fileName) throws IOException {
        return new ArpPacket(new KaitaiStream(fileName));
    }

    public ArpPacket(KaitaiStream _io) {
        super(_io);
        this._root = this;
        _read();
    }

    public ArpPacket(KaitaiStream _io, KaitaiStruct _parent) {
        super(_io);
        this._parent = _parent;
        this._root = this;
        _read();
    }

    public ArpPacket(KaitaiStream _io, KaitaiStruct _parent, ArpPacket _root) {
        super(_io);
        this._parent = _parent;
        this._root = _root;
        _read();
    }
    private void _read() {
        this.htype = this._io.readU2be();
        this.ptype = this._io.readBytes(2);
        this.hlen = this._io.readU1();
        this.plen = this._io.readU1();
        this.operation = this._io.readU2be();
        this.sha = this._io.readBytes(hlen());
        this.spa = this._io.readBytes(plen());
        this.tha = this._io.readBytes(hlen());
        this.tpa = this._io.readBytes(plen());
    }
    private int htype;
    private byte[] ptype;
    private int hlen;
    private int plen;
    private int operation;
    private byte[] sha;
    private byte[] spa;
    private byte[] tha;
    private byte[] tpa;
    private ArpPacket _root;
    private KaitaiStruct _parent;
    public int htype() { return htype; }
    public byte[] ptype() { return ptype; }
    public int hlen() { return hlen; }
    public int plen() { return plen; }
    public int operation() { return operation; }
    public byte[] sha() { return sha; }
    public byte[] spa() { return spa; }
    public byte[] tha() { return tha; }
    public byte[] tpa() { return tpa; }
    public ArpPacket _root() { return _root; }
    public KaitaiStruct _parent() { return _parent; }
}
